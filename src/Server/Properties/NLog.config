<?xml version="1.0" encoding="utf-8"?>

<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Warn"
      internalLogFile="${basedir}/Logs/logger-internal.log"
      throwExceptions="true">

    <!-- Enable asp.net core layout renderers -->
    <extensions>
        <add assembly="NLog.Web"/>
        <add assembly="NLog.Web.AspNetCore"/>
        <add assembly="NLog.GeoIP"/>
    </extensions>
    
    <!-- Variables -->
    <variable name="logDirectory" value="${basedir}/Logs"/>
    
    <targets async="true">
        <!-- Write plain logs to files -->
        <target xsi:type="File"
                name="fileTrace"
                header="Trace. Created: ${longdate}. Version: ${assembly-version} ${newline}"
                footer="End File."
                fileName="${logDirectory}/${shortdate}_all.log"
                keepFileOpen="true"
                concurrentWrites="true"
                archiveFileName="${logDirectory}/{#}_all.log.zip"
                archiveEvery="Sunday"
                archiveNumbering="Date"
                archiveDateFormat="yyyy-MM-dd"
                maxArchiveFiles="30"
                enableArchiveFileCompression="true">
            <layout xsi:type="LayoutWithHeaderAndFooter">
                <layout xsi:type="CompoundLayout">
                    <layout xsi:type="SimpleLayout" text="${uppercase:${level}} ${longdate} ${newline} "/>
                    <layout xsi:type="SimpleLayout" text="[${logger}] -> ${callsite} ${newline} "/>
                    <layout xsi:type="SimpleLayout" text="#${sequenceid}: ${message:raw=true:withException=false}"/>
                    <layout xsi:type="SimpleLayout" text="${onexception:inner=${newline} EXCEPTION\:${newline}${indent-exception}}"/>
                    <layout xsi:type="SimpleLayout" text="${onhasproperties:inner=${newline} PPOPERTIES\: ${all-event-properties:format=[key]\: [value]:separator=; }}"/>
                    <layout xsi:type="SimpleLayout" text="${newline}"/>
                </layout>
                <header xsi:type="SimpleLayout" text="Start Logging: ${longdate}"/>
                <footer xsi:type="SimpleLayout" text="- - - - - - End Logging: ${longdate} ${newline}"/>
            </layout>
        </target>
        
        <target xsi:type="File"
                name="fileErrors"
                fileName="${logDirectory}/${shortdate}_errors.log"
                concurrentWrites="true"
                header="Errors. Created: ${longdate}. Version: ${assembly-version} ${newline}"
                footer="End File.">
            <layout xsi:type="LayoutWithHeaderAndFooter">
                <layout xsi:type="CompoundLayout">
                    <layout xsi:type="SimpleLayout" text="${uppercase:${level}} ${longdate} ${newline} "/>
                    <layout xsi:type="SimpleLayout" text="[${logger}] -> ${callsite} ${newline} "/>
                    <layout xsi:type="SimpleLayout" text="#${sequenceid}: ${message:raw=true:withException=true}"/>
                    <layout xsi:type="SimpleLayout" text="${onexception:inner=${newline} EXCEPTION\:${newline}${indent-exception}}"/>
                    <layout xsi:type="SimpleLayout" text="${onhasproperties:inner=${newline} PPOPERTIES\: ${all-event-properties:format=[key]\: [value]:separator=; }}"/>
                    <layout xsi:type="SimpleLayout" text="${newline}"/>
                </layout>
                <header xsi:type="SimpleLayout" text="Start Logging: ${longdate} ${newline}"/>
                <footer xsi:type="SimpleLayout" text="- - - - - - End Logging: ${longdate} ${newline}"/>
            </layout>
        </target>
        
        <!-- Write logs to colored console -->
        <target xsi:type="LimitingWrapper"
                name="consoleColored"
                messageLimit="300">
            <target xsi:type="ColoredConsole"
                    encoding="utf-8"
                    useDefaultRowHighlightingRules="false" 
                    detectOutputRedirected="true"
                    detectConsoleAvailable="true"
                    header="Started: ${longdate}. Version: ${assembly-version} ${newline}"
                    footer="End.">
                <layout xsi:type="LayoutWithHeaderAndFooter">
                    <layout xsi:type="CompoundLayout">
                        <layout xsi:type="SimpleLayout" text="${newline}"/>
                        <layout xsi:type="SimpleLayout" text="${uppercase:${level}} ${time}: ${newline} "/>
                        <layout xsi:type="SimpleLayout" text="#${sequenceid}. [${logger}] -> ${callsite}:${newline} "/>
                        <layout xsi:type="SimpleLayout" text="${message:raw=true:withException=false}"/>
                        <layout xsi:type="SimpleLayout" text="${onexception:inner=${newline} EXCEPTION\:${newline}${indent-exception}}"/>
                        <layout xsi:type="SimpleLayout" text="${onhasproperties:inner=${newline} PPOPERTIES\: ${all-event-properties:format=[key]\: [value]:separator=; }}"/>
                    </layout>
                    <header xsi:type="SimpleLayout" text="Start Logging: ${longdate} ${newline}"/>
                    <footer xsi:type="SimpleLayout" text="---"/>
                </layout>
                <highlight-row condition="level == LogLevel.Trace" foregroundColor="Gray"/>
                <highlight-row condition="level == LogLevel.Debug" foregroundColor="DarkGray"/>
                <highlight-row condition="level == LogLevel.Info" foregroundColor="NoChange"/>
                <highlight-row condition="level == LogLevel.Warn" foregroundColor="Magenta"/>
                <highlight-row condition="level == LogLevel.Error" foregroundColor="Red"/>
                <highlight-row condition="level == LogLevel.Fatal" foregroundColor="DarkRed"/>
            </target>
        </target>
    </targets>

    
    <!-- Rules to map from logger name to target -->
    <rules>
        <logger name="Microsoft.*" maxlevel="Info" writeTo="" final="true" />
        <logger name="*" minlevel="Trace" writeTo="consoleColored"/>
        <logger name="*" minlevel="Trace" writeTo="fileTrace"/>
        <logger name="*" minlevel="Error" writeTo="fileErrors"/>
    </rules>
</nlog>