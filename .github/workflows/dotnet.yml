name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: 'ubuntu-latest'

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true
        env:
          DOTNET_NOLOGO: true
          
#      - name: Install Workloads
#        run: dotnet workload install wasm-tools

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        id: build
        run: |
          git update-index --chmod=+x
          dotnet build --no-restore -c Release

      - name: Test
        id: test
        run: |
          dotnet test --no-restore --no-build --verbosity normal -c Release
          echo ::set-output name=exit_code::$?

      - name: Publish Production
        id: publish-production
        if: steps.test.outputs.exit_code == 0
        run: |
          cd scripts
          chmod +x ./publish.sh
          ./publish.sh -c Production -d build/geoip.net
          cd ${{ github.workspace }}
          echo ::set-output name=exit_code::$?
        shell:
          bash
        
#       - name: Publish Staging
#         id: publish-staging
#         if: steps.test.outputs.exit_code == 0
#         run: |
#           cd scripts
#           chmod +x ./publish.sh
#           ./publish.sh -c Staging -d build/dev.geoip.net
#           cd ${{ github.workspace }}
#           echo ::set-output name=exit_code::$?
#         shell:
#           bash

      - name: Pack
        id: pack
        if: steps.publish-production.outputs.exit_code == 0 && steps.publish-staging.outputs.exit_code
        run: |
          cd build
          ls -a
          zip -r -9 GeoIP.zip geoip.net
          cd ${{ github.workspace }}
          echo ::set-output name=exit_code::$?
        shell:
          pwsh

      - name: Upload Publish Artifact
        id: upload_app
        if: steps.publish.outputs.exit_code == 0
        uses: actions/upload-artifact@master
        with:
         name: GeoIp
         path: ${{ github.workspace }}/build

      - name: Bump version and push tag
        id: tag_version
        if: steps.pack.outputs.exit_code == 0
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch
          custom_tag: 1.0.1

      - name: Create a GitHub Release
        id: create_release
        if: steps.tag_version.outputs.exit_code == 0
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

      - name: Upload Production Asset
        if: steps.create_release.outputs.exit_code == 0
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/build/GeoIP.zip
          asset_name: GeoIP.zip
          asset_content_type: application/zip
          
#       - name: Upload Staging Asset
#         if: steps.create_release.outputs.exit_code == 0
#         uses: actions/upload-release-asset@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           upload_url: ${{ steps.create_release.outputs.upload_url }}
#           asset_path: ${{ github.workspace }}/build/GeoIP-Dev.zip
#           asset_name: GeoIP-Dev.zip
#           asset_content_type: application/zip 